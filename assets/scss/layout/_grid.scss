
/// ключи со значением расширения экрана, этот массив мы используем в последствии для формирования медиазапроса
$breakpoints: (
    'small': 425px,
    'medium': 768px,
    'large': 1024px,
    'huge': 1200px
);

/// сздаем переменную обозначающую количество колонок на сайте, максимальное кол-во у нас 12
$cols: 12;

 /// далее создаем миксин брейк с параметром сайз, благодаря этому миксину будут формироваться медиазапросы 
@mixin break($size){

/// первым параметром передается имя массива, вторым размер по которому будет выбираться значение
    @media (min-width: map-get($breakpoints, $size)) {
        /// и будет выводиться контент
        @content;
    }
}

/// создаем директиву где для каждого ключа и значения в массиве breakpoints используем миксин строка 27
@each $key, $value in $breakpoints{
    /// в этом миксине в качестве параметра будет передаваться ключ
    @include break($key){
        /// тут в качестве контента будет выводиться директива
        // для каждой переменной  $i начиная с еденицы до $items: 12; формируем селекторы с переменной $key и переменной $i 
        @for $i from 1 through $cols {
            
            .column-#{$key}-#{$i} { //here we create width for each column as parameters we pass key 
                                    //it mean for example medium or large or huge and variable i 
                                    //which mean number of column such way we create something like:
                                    //.column-small-12
                
                //для каждого селектора назначаем ширину где $i делем на кол-во колонок и умножаем на 100%
                //here we set width for each selector by class .column-....-...
                width: #{$i / $cols * 100%};
                //добавим обтикание слева для всх созданных селекторов
                
                float: left; //here we add floating from left side
            }
        }

    }
}
//создадим миксин для очищения обтикания что-бы могли использовать row
// Помощник для сброса внутреннего обтекания
/// author Николас Галлагер
/// link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix

@mixin clearfix(){ //here we create mixin to clear floating
    &:after{
        content: "";
        display: block;
        clear: both;
    }
    &:before{
        content: "";
        display: block;
        clear: both;
    }
}
//показываем роу что-бы он использовал этот миксин
.row{
    @include clearfix;// here we show .row to use mixin for clearing row
}
